{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-room/chat-room.component.ts","webpack:///src/app/components/chat-room/chat-room.component.html","webpack:///src/app/components/contacts/contacts.component.ts","webpack:///src/app/components/contacts/contacts.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","router","title","sub","events","subscribe","route","localStorage","getItem","navigateByUrl","unsubscribe","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","name","declarations","providers","bootstrap","ChatRoomComponent","auth","activate","dp","messages","senderId","params","receiverId","getUsers","r","docs","length","receiverData","find","x","data","email","split","senderData","getMessage","filteredData","filter","v","data1","payload","doc","map","reply","user","event","files","file","url","src","type","icon","push","text","message","date","transform","Date","saveMessage","console","log","userId","doLogOut","removeItem","logout","ContactsComponent","h","users","avatar","charAt","loginForm","LoginComponent","fb","page","group","required","password","minLength","controls","value","authenticated","doLogin","updateAuth","setItem","alert","doRegister","submit","AuthService","db","collection","add","ref","where","get","update","orderBy","snapshotChanges","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: \"full\" },\n  { path: 'login', component: LoginComponent },\n  { path: 'contacts', component: ContactsComponent},\n  { path: 'chat/:id', component: ChatRoomComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  title = 'angular-chat';\n  sub: any;\n  constructor(private router: Router) {\n    this.sub = this.router.events.subscribe((route) => {\n      const id = localStorage.getItem('userId');\n      if(route['url'] === '/login' && id) {\n        this.router.navigateByUrl('/contacts');\n      } else if (route['url'] !== '/login' && !id) {\n        this.router.navigateByUrl('/login');\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","<nb-layout>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbChatModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { DatePipe } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChatRoomComponent,\n    ContactsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    BrowserAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    NbChatModule.forRoot()\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, ActivatedRoute  } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss']\n})\nexport class ChatRoomComponent implements OnInit, OnDestroy  {\n  messages: any = [];\n  sub: any;\n  senderId: any;\n  senderData: any;\n  receiverId: any;\n  receiverData: any;\n  constructor(private auth: AuthService, private route: Router, private activate: ActivatedRoute, private dp:DatePipe) {\n   }\n\n  ngOnInit(): void {\n    this.senderId = localStorage.getItem('userId');\n    this.sub = this.activate.params.subscribe(params => {\n      this.receiverId = params['id'];\n      this.auth.getUsers().subscribe((r) => {\n        if(r.docs && r.docs.length) {\n          const receiverData = r.docs.find((x) => x.id == this.receiverId);\n          if (receiverData) {\n            this.receiverData = receiverData.data();\n            this.receiverData.name = this.receiverData.email.split('@')[0];\n          }\n          const senderData = r.docs.find((x) => x.id == this.senderId);\n          if (senderData) {\n            this.senderData = senderData.data();\n            this.senderData.name = this.senderData.email.split('@')[0];\n          }\n        }\n        this.getMessage();\n      });\n   });\n  }\n\n  getMessage() {\n    this.auth.getMessage().subscribe((r) => { \n      if(r && r.length) {\n        const filteredData = r.filter((v) => {\n          let data1: any;\n          data1 = v.payload.doc.data();\n          return (data1.senderId == this.senderId || data1.receiverId == this.senderId) && (data1.receiverId == this.receiverId || data1.senderId == this.receiverId);\n        });\n        this.messages = filteredData.map((x) => {\n          let data: any = {};\n          data = x.payload.doc.data();\n          data.reply = (data.senderId == this.senderId)? true : false;\n          data.user = {\n            name : (data.reply)?this.senderData.name : this.receiverData.name\n          };\n          return data;\n        })\n      }\n    });\n  }\n\n  sendMessage(event: any) {\n    const files = !event.files ? [] : event.files.map((file) => {\n      return {\n        url: file.src,\n        type: file.type,\n        icon: 'file-text-outline',\n      };\n    });\n\n    this.messages.push({\n      text: event.message,\n      date: this.dp.transform(new Date(), 'yyyy-MM-dd hh:mm:ss'),\n      reply: true,\n      type: files.length ? 'file' : 'text',\n      files: files,\n      user: {\n        name: this.senderData.email.split('@')[0]\n      },\n      senderId: this.senderId,\n      receiverId: this.receiverId\n    });\n\n    this.saveMessage(event, files);\n\n    console.log(this.messages);\n    /*const botReply = this.chatShowcaseService.reply(event.message);\n    if (botReply) {\n      setTimeout(() => { this.messages.push(botReply) }, 500);\n    }*/\n  }\n\n  saveMessage(event, files) {\n    const message = {\n      text: event.message,\n      date: this.dp.transform(new Date(), 'yyyy-MM-dd hh:mm:ss'),\n      //reply: true,\n      type: files.length ? 'file' : 'text',\n      files: files,\n      senderId: this.senderId,\n      receiverId: this.receiverId\n    };\n    this.auth.saveMessage(message).then((x) => {\n    });\n  }\n\n  logout() {\n    const userId = localStorage.getItem('userId');\n    this.auth.doLogOut(userId).then(()  => {\n      localStorage.removeItem('userId');\n      this.route.navigateByUrl('[/login]');\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","<nb-chat *ngIf=\"receiverData && receiverData.name\" title=\"{{receiverData.name}}\" size=\"large\">\n  <nb-chat-message *ngFor=\"let msg of messages\"\n                   [type]=\"msg.type\"\n                   [message]=\"msg.text\"\n                   [reply]=\"msg.reply\"\n                   [sender]=\"msg.user.name\"\n                   [date]=\"msg.date\"\n                   [files]=\"msg.files\"\n                   [quote]=\"msg.quote\"\n                   [latitude]=\"msg.latitude\"\n                   [longitude]=\"msg.longitude\"\n                   [avatar]=\"msg.user.avatar\">\n  </nb-chat-message>\n  <nb-chat-form (send)=\"sendMessage($event)\" [dropFiles]=\"true\">\n  </nb-chat-form>\n</nb-chat>\n<button (click)=\"logout()\">Logout</button>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnInit {\n  users: any;\n  userId: any;\n  constructor(private auth: AuthService, private route: Router) {\n    this.userId = localStorage.getItem('userId');\n   }\n\n  ngOnInit() {\n\n    this.auth.getUsers().subscribe((r) => {\n      if(r.docs && r.docs.length) {\n        const filteredData = r.docs.filter((h) => h.id != this.userId)\n        this.users = filteredData.map((x) => {\n          const data = {\n            id: x.id,\n            email: x.data().email,\n            name: x.data().email.split('@')[0],\n            avatar: x.data().email.charAt(0)\n          }\n          return data;\n        });\n      } else {\n        \n      }\n    })\n  }\n\n  navigateToChat(user) {\n    this.route.navigateByUrl('/chat/'+user.id);\n  }\n\n}\n","<div class=\"user\" *ngFor= \"let user of users\">\n    <div class=\"top pointer\" (click)=\"navigateToChat(user)\">\n        <div class=\"avatar\">{{user.avatar | uppercase}}</div>\n        <div class=\"name\">{{user.name | titlecase}}</div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: any;\n  page = 'login';\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private route: Router) { \n    this.loginForm = this.fb.group({\n      email: [\"\", [Validators.required,Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n    })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  submit() {\n    const user = {\n      email: this.loginForm.controls.email.value,\n      password: this.loginForm.controls.password.value,\n      authenticated: true\n    }\n    if (this.page == \"login\") {\n      this.auth.doLogin(user).subscribe((r)=> {\n        if(r.docs && r.docs.length) {\n          const id = r.docs[0].id;\n          this.auth.updateAuth(id, true).then(() => {\n          localStorage.setItem('userId', id);\n          this.route.navigateByUrl('/contacts');\n          });\n        } else {\n          alert('Invalid Email or Password')\n        }\n      })\n    } else if (this.page == \"register\") {\n        this.auth.doRegister(user).then((r) => {\n          localStorage.setItem('userId', r.id);\n          this.route.navigateByUrl('/contacts');\n          //this.auth.userId = r.id\n        });\n    }\n  }\n\n}\n","<div class=\"main-wrapper\">\n    <div class=\"head\" *ngIf=\"page=='login'\">Login !!!</div>\n    <div class=\"head\" *ngIf=\"page=='register'\">Sign up !!!</div>\n    <div class=\"form\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n            <div class=\"form-group\">\n                <label>Email</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                <div class=\"alert alert-danger error-div\" *ngIf=\"loginForm.controls.email.dirty && loginForm.controls.email.errors\">\n                    <span *ngIf=\"loginForm.controls.email.errors.required\">Email Required</span>\n                    <span *ngIf=\"loginForm.controls.email.errors.email\">Please enter the correct email </span>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>Password</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"password\">\n                <div class=\"alert alert-danger error-div\" *ngIf=\"loginForm.controls.password.dirty && loginForm.controls.password.errors\">\n                        <span *ngIf=\"loginForm.controls.password.errors.required\">Password Required</span>\n                        <span *ngIf=\"loginForm.controls.password.errors.minlength\">Password should be minimum of 6 characters </span>\n                    </div>\n            </div>\n            <div class=\"form-group footer\">\n                    <div class=\"submit\"><button class=\"btn btn-primary\" [class.disabled]=\"loginForm.invalid\">Submit</button></div>\n                    <div class=\"account pointer\">\n                        <a *ngIf=\"page=='register'\" (click)=\"page='login';loginForm.reset()\">Already have an account account</a>\n                        <a *ngIf=\"page=='login'\" (click)=\"page='register';loginForm.reset()\">Create account</a>\n                    </div>\n                </div>\n        </form>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  userId: any;\n\n  constructor(private db: AngularFirestore) { }\n\n  doRegister(user) {\n    return this.db.collection('user').add({\n      email: user.email,\n      password: user.password,\n      authenticated: user.authenticated\n    });\n  }\n\n  doLogin(user): Observable<any> {\n    return this.db.collection('user', ref => ref.where('email', '==', user.email).where('password', '==', user.password)).get();\n  }\n\n  doLogOut(id) {\n    return this.db.collection(\"user\").doc(id).update({\n      authenticated: false\n  });\n  }\n\n  updateAuth(id, auth) {\n    return this.db.collection(\"user\").doc(id).update({\n      authenticated: auth\n  });\n  }\n\n  getUsers(): Observable<any> {\n    return this.db.collection('user').get();\n  }\n\n  saveMessage(message) {\n    return this.db.collection('messages').add(message);\n  }\n\n  getMessage() {\n    return this.db.collection('messages', ref => ref.orderBy('date', 'asc')).snapshotChanges();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDE9G9h0shzVY23MrKdKd65Z0DrtJqH9xI\",\n    authDomain: \"dp-chat-app.firebaseapp.com\",\n    databaseURL: \"https://dp-chat-app.firebaseio.com\",\n    projectId: \"dp-chat-app\",\n    storageBucket: \"dp-chat-app.appspot.com\",\n    messagingSenderId: \"1021977600013\",\n    appId: \"1:1021977600013:web:d5a9378b20f704abbcb544\",\n    measurementId: \"G-JKT1B1V07Q\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}